// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package protocol

@SerialVersionUID(0L)
final case class GetWall(
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetWall] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      unknownFields.writeTo(_output__)
    }
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: protocol.GetWall.type = protocol.GetWall
    // @@protoc_insertion_point(GeneratedMessage[GetWall])
}

object GetWall extends scalapb.GeneratedMessageCompanion[protocol.GetWall] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[protocol.GetWall] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): protocol.GetWall = {
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    protocol.GetWall(
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[protocol.GetWall] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      protocol.GetWall(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ProtocolProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ProtocolProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.protocol.GetWall.Request,
      _root_.protocol.GetWall.Response
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = protocol.GetWall(
  )
  sealed abstract class ERROR_CODE(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = protocol.GetWall.ERROR_CODE
    type RecognizedType = protocol.GetWall.ERROR_CODE.Recognized
    def isUnauthorized: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[ERROR_CODE] = protocol.GetWall.ERROR_CODE
    final def asRecognized: _root_.scala.Option[protocol.GetWall.ERROR_CODE.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[protocol.GetWall.ERROR_CODE.Recognized])
  }
  
  object ERROR_CODE extends _root_.scalapb.GeneratedEnumCompanion[ERROR_CODE] {
    sealed trait Recognized extends ERROR_CODE
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ERROR_CODE] = this
    
    @SerialVersionUID(0L)
    case object UNAUTHORIZED extends ERROR_CODE(0) with ERROR_CODE.Recognized {
      val index = 0
      val name = "UNAUTHORIZED"
      override def isUnauthorized: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ERROR_CODE(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(UNAUTHORIZED)
    def fromValue(__value: _root_.scala.Int): ERROR_CODE = __value match {
      case 0 => UNAUTHORIZED
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = protocol.GetWall.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = protocol.GetWall.scalaDescriptor.enums(0)
  }
  @SerialVersionUID(0L)
  final case class Request(
      token: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Request] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = token
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = token
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withToken(__v: _root_.scala.Predef.String): Request = copy(token = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(token)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: protocol.GetWall.Request.type = protocol.GetWall.Request
      // @@protoc_insertion_point(GeneratedMessage[GetWall.Request])
  }
  
  object Request extends scalapb.GeneratedMessageCompanion[protocol.GetWall.Request] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[protocol.GetWall.Request] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): protocol.GetWall.Request = {
      var __token: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __token = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      protocol.GetWall.Request(
          token = __token,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[protocol.GetWall.Request] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        protocol.GetWall.Request(
          token = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = protocol.GetWall.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = protocol.GetWall.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = protocol.GetWall.Request(
      token = ""
    )
    implicit class RequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, protocol.GetWall.Request]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, protocol.GetWall.Request](_l) {
      def token: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.token)((c_, f_) => c_.copy(token = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
    def of(
      token: _root_.scala.Predef.String
    ): _root_.protocol.GetWall.Request = _root_.protocol.GetWall.Request(
      token
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[GetWall.Request])
  }
  
  @SerialVersionUID(0L)
  final case class Response(
      payload: protocol.GetWall.Response.Payload = protocol.GetWall.Response.Payload.Empty,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Response] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        if (payload.wall.isDefined) {
          val __value = payload.wall.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (payload.err.isDefined) {
          val __value = payload.err.get.value
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        payload.wall.foreach { __v =>
          val __m = __v
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        payload.err.foreach { __v =>
          val __m = __v.value
          _output__.writeEnum(2, __m)
        };
        unknownFields.writeTo(_output__)
      }
      def getWall: protocol.Wall = payload.wall.getOrElse(protocol.Wall.defaultInstance)
      def withWall(__v: protocol.Wall): Response = copy(payload = protocol.GetWall.Response.Payload.Wall(__v))
      def getErr: protocol.GetWall.ERROR_CODE = payload.err.getOrElse(protocol.GetWall.ERROR_CODE.UNAUTHORIZED)
      def withErr(__v: protocol.GetWall.ERROR_CODE): Response = copy(payload = protocol.GetWall.Response.Payload.Err(__v))
      def clearPayload: Response = copy(payload = protocol.GetWall.Response.Payload.Empty)
      def withPayload(__v: protocol.GetWall.Response.Payload): Response = copy(payload = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => payload.wall.orNull
          case 2 => payload.err.map(_.javaValueDescriptor).orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => payload.wall.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => payload.err.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: protocol.GetWall.Response.type = protocol.GetWall.Response
      // @@protoc_insertion_point(GeneratedMessage[GetWall.Response])
  }
  
  object Response extends scalapb.GeneratedMessageCompanion[protocol.GetWall.Response] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[protocol.GetWall.Response] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): protocol.GetWall.Response = {
      var __payload: protocol.GetWall.Response.Payload = protocol.GetWall.Response.Payload.Empty
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __payload = protocol.GetWall.Response.Payload.Wall(__payload.wall.fold(_root_.scalapb.LiteParser.readMessage[protocol.Wall](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 16 =>
            __payload = protocol.GetWall.Response.Payload.Err(protocol.GetWall.ERROR_CODE.fromValue(_input__.readEnum()))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      protocol.GetWall.Response(
          payload = __payload,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[protocol.GetWall.Response] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        protocol.GetWall.Response(
          payload = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[protocol.Wall]]).map(protocol.GetWall.Response.Payload.Wall(_))
              .orElse[protocol.GetWall.Response.Payload](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => protocol.GetWall.Response.Payload.Err(protocol.GetWall.ERROR_CODE.fromValue(__e.number))))
              .getOrElse(protocol.GetWall.Response.Payload.Empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = protocol.GetWall.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = protocol.GetWall.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 1 => __out = protocol.Wall
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => protocol.GetWall.ERROR_CODE
      }
    }
    lazy val defaultInstance = protocol.GetWall.Response(
      payload = protocol.GetWall.Response.Payload.Empty
    )
    sealed trait Payload extends _root_.scalapb.GeneratedOneof {
      def isEmpty: _root_.scala.Boolean = false
      def isDefined: _root_.scala.Boolean = true
      def isWall: _root_.scala.Boolean = false
      def isErr: _root_.scala.Boolean = false
      def wall: _root_.scala.Option[protocol.Wall] = _root_.scala.None
      def err: _root_.scala.Option[protocol.GetWall.ERROR_CODE] = _root_.scala.None
    }
    object Payload {
      @SerialVersionUID(0L)
      case object Empty extends protocol.GetWall.Response.Payload {
        type ValueType = _root_.scala.Nothing
        override def isEmpty: _root_.scala.Boolean = true
        override def isDefined: _root_.scala.Boolean = false
        override def number: _root_.scala.Int = 0
        override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
      }
    
      @SerialVersionUID(0L)
      final case class Wall(value: protocol.Wall) extends protocol.GetWall.Response.Payload {
        type ValueType = protocol.Wall
        override def isWall: _root_.scala.Boolean = true
        override def wall: _root_.scala.Option[protocol.Wall] = Some(value)
        override def number: _root_.scala.Int = 1
      }
      @SerialVersionUID(0L)
      final case class Err(value: protocol.GetWall.ERROR_CODE) extends protocol.GetWall.Response.Payload {
        type ValueType = protocol.GetWall.ERROR_CODE
        override def isErr: _root_.scala.Boolean = true
        override def err: _root_.scala.Option[protocol.GetWall.ERROR_CODE] = Some(value)
        override def number: _root_.scala.Int = 2
      }
    }
    implicit class ResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, protocol.GetWall.Response]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, protocol.GetWall.Response](_l) {
      def wall: _root_.scalapb.lenses.Lens[UpperPB, protocol.Wall] = field(_.getWall)((c_, f_) => c_.copy(payload = protocol.GetWall.Response.Payload.Wall(f_)))
      def err: _root_.scalapb.lenses.Lens[UpperPB, protocol.GetWall.ERROR_CODE] = field(_.getErr)((c_, f_) => c_.copy(payload = protocol.GetWall.Response.Payload.Err(f_)))
      def payload: _root_.scalapb.lenses.Lens[UpperPB, protocol.GetWall.Response.Payload] = field(_.payload)((c_, f_) => c_.copy(payload = f_))
    }
    final val WALL_FIELD_NUMBER = 1
    final val ERR_FIELD_NUMBER = 2
    def of(
      payload: protocol.GetWall.Response.Payload
    ): _root_.protocol.GetWall.Response = _root_.protocol.GetWall.Response(
      payload
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[GetWall.Response])
  }
  
  implicit class GetWallLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, protocol.GetWall]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, protocol.GetWall](_l) {
  }
  def of(
  ): _root_.protocol.GetWall = _root_.protocol.GetWall(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[GetWall])
}
